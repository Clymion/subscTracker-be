openapi: 3.1.1

info:
  title: サブスク管理アプリ API - 認証・ユーザー関連
  description: 認証機能とユーザー関連のAPI定義
  version: 1.0.0

# 共通定義参照
components:
  securitySchemes:
    bearerAuth:
      $ref: 'common.api.yaml#/components/securitySchemes/bearerAuth'
  responses:
    BadRequest:
      $ref: 'common.api.yaml#/components/responses/BadRequest'
    Unauthorized:
      $ref: 'common.api.yaml#/components/responses/Unauthorized' 
    Forbidden:
      $ref: 'common.api.yaml#/components/responses/Forbidden'
    NotFound:
      $ref: 'common.api.yaml#/components/responses/NotFound'
  
  schemas:
    # 認証関連のスキーマ
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: メールアドレス
        password:
          type: string
          description: パスワード
      required:
        - email
        - password

    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 32
          description: ユーザー名
        email:
          type: string
          format: email
          description: メールアドレス
        password:
          type: string
          minLength: 8
          description: パスワード
        confirmPassword:
          type: string
          description: パスワード（確認用）
        base_currency:
          type: string
          description: 基準通貨
      required:
        - username
        - email
        - password
        - confirmPassword
        - base_currency

    UserBasic:
      type: object
      properties:
        id:
          type: string
          description: ユーザーID
        username:
          type: string
          description: ユーザー名
        email:
          type: string
          format: email
          description: メールアドレス
      required:
        - id
        - username
        - email

    User:
      allOf:
        - $ref: '#/components/schemas/UserBasic'
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: 作成日時
          required:
            - created_at

    UserUpdateRequest:
      type: object
      properties:
        username:
          type: string
          description: ユーザー名
        email:
          type: string
          format: email
          description: メールアドレス

    Error:
      $ref: 'common.api.yaml#/components/schemas/Error'

paths:
  # 認証関連のAPI
  /auth/login:
    post:
      tags:
        - 認証
      summary: ログイン
      description: ユーザーのログイン認証を行い、JWTトークンを発行します
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWTトークン
                  user:
                    $ref: '#/components/schemas/UserBasic'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/register:
    post:
      tags:
        - 認証
      summary: 新規登録
      description: 新規ユーザーを登録します
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWTトークン
                  user:
                    $ref: '#/components/schemas/UserBasic'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: ユーザー名またはメールアドレスが既に使用されています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    post:
      tags:
        - 認証
      summary: トークンの更新
      description: リフレッシュトークンを使用して新しいアクセストークンを取得します
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: リフレッシュトークン
              required:
                - refresh_token
      responses:
        '200':
          description: トークン更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        description: 新しいアクセストークン
                      refresh_token:
                        type: string
                        description: 新しいリフレッシュトークン
        '401':
          $ref: '#/components/responses/Unauthorized'

  # ユーザー関連のAPI
  /users/{userId}:
    get:
      tags:
        - プロフィール設定
      summary: ユーザー情報の取得
      description: 指定されたユーザーの情報を取得します
      operationId: getUser
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: ユーザーID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 正常に取得しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - プロフィール設定
      summary: ユーザー情報の更新
      description: 指定されたユーザーの情報を更新します
      operationId: updateUser
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: ユーザーID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: 正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - プロフィール設定
      summary: アカウントの削除
      description: 指定されたユーザーアカウントを削除します
      operationId: deleteUser
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: ユーザーID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: パスワード確認用
              required:
                - password
      responses:
        '204':
          description: 正常に削除しました
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /users/{userId}/change-password:
    post:
      tags:
        - プロフィール設定
      summary: パスワード変更
      description: 指定されたユーザーのパスワードを変更します
      operationId: changePassword
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: ユーザーID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: 現在のパスワード
                new_password:
                  type: string
                  description: 新しいパスワード
              required:
                - current_password
                - new_password
      responses:
        '200':
          description: パスワードを正常に変更しました
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
