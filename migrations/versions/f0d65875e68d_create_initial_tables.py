"""Create initial tables

Revision ID: f0d65875e68d
Revises: 
Create Date: 2025-06-14 14:05:50.656664

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f0d65875e68d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('labels',
    sa.Column('label_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('system_label', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['labels.label_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('label_id')
    )
    op.create_index('idx_labels_user_parent', 'labels', ['user_id', 'parent_id'], unique=False)
    op.create_index(op.f('ix_labels_parent_id'), 'labels', ['parent_id'], unique=False)
    op.create_index(op.f('ix_labels_system_label'), 'labels', ['system_label'], unique=False)
    op.create_index(op.f('ix_labels_user_id'), 'labels', ['user_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('subscription_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.REAL(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('initial_payment_date', sa.Date(), nullable=False),
    sa.Column('next_payment_date', sa.Date(), nullable=False),
    sa.Column('payment_frequency', sa.String(length=20), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subscription_id')
    )
    op.create_index('idx_subscriptions_pagination', 'subscriptions', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_subscriptions_pagination_name', 'subscriptions', ['user_id', 'name'], unique=False)
    op.create_index('idx_subscriptions_pagination_price', 'subscriptions', ['user_id', 'price'], unique=False)
    op.create_index('idx_subscriptions_user_status', 'subscriptions', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_subscriptions_currency'), 'subscriptions', ['currency'], unique=False)
    op.create_index(op.f('ix_subscriptions_status'), 'subscriptions', ['status'], unique=False)
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=False)
    op.create_table('subscription_labels',
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('label_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['label_id'], ['labels.label_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.subscription_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subscription_id', 'label_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscription_labels')
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_status'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_currency'), table_name='subscriptions')
    op.drop_index('idx_subscriptions_user_status', table_name='subscriptions')
    op.drop_index('idx_subscriptions_pagination_price', table_name='subscriptions')
    op.drop_index('idx_subscriptions_pagination_name', table_name='subscriptions')
    op.drop_index('idx_subscriptions_pagination', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_labels_user_id'), table_name='labels')
    op.drop_index(op.f('ix_labels_system_label'), table_name='labels')
    op.drop_index(op.f('ix_labels_parent_id'), table_name='labels')
    op.drop_index('idx_labels_user_parent', table_name='labels')
    op.drop_table('labels')
    op.drop_table('users')
    # ### end Alembic commands ###
